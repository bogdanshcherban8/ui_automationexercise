{"name": "Checking breadcrumb on static pages", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: locator(\"//a[@href=\\\"/products\\\"]\") resolved to 2 elements:\n    1) <a href=\"/products\">…</a> aka get_by_role(\"link\", name=\" Products\")\n    2) <a href=\"/products\">Products</a> aka get_by_role(\"link\", name=\"Products\", exact=True)\n\nCall log:\n  - Expect \"to_be_visible\" with timeout 5000ms\n  - waiting for locator(\"//a[@href=\\\"/products\\\"]\")", "trace": "self = <tests.test_breadcrumb.test_breadcrumb.TestBreadcrumb object at 0x0000023F342C7B10>\nproducts_page = <pages.products_page.products_page.ProductsPage object at 0x0000023F3485E570>\nurl = 'https://www.automationexercise.com/category_products/3'\npath_text = 'Men > Tshirts'\n\n    @pytest.mark.smoke\n    @pytest.mark.no_path\n    @allure.title(\"Checking breadcrumb on static pages\")\n    @pytest.mark.parametrize(\"url, path_text\", zip(urls,products_data))\n    def test_breadcrumb_no_path(self,products_page: ProductsPage, url, path_text):\n        products_page.visit(url)\n>       products_page.breadcrumb.check_breadcrumb_products(path_text)\n\ntests\\test_breadcrumb\\test_breadcrumb.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncomponents\\breadcrumb\\breadcrumb.py:16: in check_breadcrumb_products\n    self.products_breadcrumb.to_be_visible()\ncomponents\\elements\\base_element.py:14: in to_be_visible\n    expect(locator).to_be_visible()\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py:726: in _expect\n    return await self._frame._expect(self._selector, expression, options, title)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:189: in _expect\n    result = await self._channel.send_return_as_dict(\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:83: in send_return_as_dict\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000023F34345400>\ncb = <function Channel.send_return_as_dict.<locals>.<lambda> at 0x0000023F348DACA0>\nis_internal = False, title = 'Expect \"to_be_visible\"'\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: locator(\"//a[@href=\\\"/products\\\"]\") resolved to 2 elements:\nE               1) <a href=\"/products\">…</a> aka get_by_role(\"link\", name=\" Products\")\nE               2) <a href=\"/products\">Products</a> aka get_by_role(\"link\", name=\"Products\", exact=True)\nE           \nE           Call log:\nE             - Expect \"to_be_visible\" with timeout 5000ms\nE             - waiting for locator(\"//a[@href=\\\"/products\\\"]\")\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: Error"}, "parameters": [{"name": "browser_page", "value": "'firefox'"}, {"name": "url", "value": "'https://www.automationexercise.com/category_products/3'"}, {"name": "path_text", "value": "'Men > Tshirts'"}], "start": 1755008096777, "stop": 1755008098751, "uuid": "674aa52b-2077-4e42-823a-877943bbd9a0", "historyId": "109bbf1ce62641f9fbdac6c8c45e4008", "testCaseId": "3cd08a8faf9394765e8009a167d659c4", "fullName": "tests.test_breadcrumb.test_breadcrumb.TestBreadcrumb#test_breadcrumb_no_path", "labels": [{"name": "tag", "value": "no_path"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "breadcrumb"}, {"name": "parentSuite", "value": "tests.test_breadcrumb"}, {"name": "suite", "value": "test_breadcrumb"}, {"name": "subSuite", "value": "TestBreadcrumb"}, {"name": "host", "value": "DESKTOP-413R136"}, {"name": "thread", "value": "3736-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_breadcrumb.test_breadcrumb"}], "titlePath": ["tests", "test_breadcrumb", "test_breadcrumb.py", "TestBreadcrumb"]}