{"name": "Checking chosen category on static pages", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to have text 'Summer T-shirt'\nActual value: Men Tshirt \nCall log:\n  - Expect \"to_have_text\" with timeout 5000ms\n  - waiting for locator(\"xpath=/html/body/section/div/div[2]/div[2]/div/div[2]/div/div[1]/div[1]/p\")\n    9 × locator resolved to <p>Men Tshirt</p>\n      - unexpected value \"Men Tshirt\"", "trace": "products_page = <pages.products_page.products_page.ProductsPage object at 0x000001D8EA159E10>\nurl = 'https://www.automationexercise.com/', cat_btn = 'men_category_button'\nsubcat_btn = 'men_tshirts_button', expected_title = 'Men - Tshirts Products'\nexpected_product = 'Summer T-shirt', expected_url = 'category_products/3'\n\n    @pytest.mark.chosen_category\n    @pytest.mark.smoke\n    @pytest.mark.no_path\n    @allure.title(\"Checking chosen category on static pages\")\n    @pytest.mark.parametrize(\"url\", [settings.app_url, urljoin(settings.app_url, \"products\")])\n    @pytest.mark.parametrize(\"cat_btn, subcat_btn, expected_title, expected_product, expected_url\", category_data)\n    def test_chosen_category(products_page: ProductsPage, url, cat_btn, subcat_btn, expected_title, expected_product,\n                             expected_url):\n        products_page.visit(url)\n    \n>       products_page.category.check_chosen_category(\n            getattr(products_page.category, cat_btn),\n            getattr(products_page.category, subcat_btn),\n            expected_title,\n            expected_product,\n            expected_url\n        )\n\ntests\\test_chosen_category\\test_chosen_category.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncomponents\\category\\category.py:89: in check_chosen_category\n    self.item_check.to_have_text(expected_item)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <components.elements.text.Text object at 0x000001D8EA1260F0>\ntext = 'Summer T-shirt'\n\n    def to_have_text(self, text:str):\n        locator=self.get_locator()\n>       expect(locator).to_have_text(text)\nE       AssertionError: Locator expected to have text 'Summer T-shirt'\nE       Actual value: Men Tshirt \nE       Call log:\nE         - Expect \"to_have_text\" with timeout 5000ms\nE         - waiting for locator(\"xpath=/html/body/section/div/div[2]/div[2]/div/div[2]/div/div[1]/div[1]/p\")\nE           9 × locator resolved to <p>Men Tshirt</p>\nE             - unexpected value \"Men Tshirt\"\n\ncomponents\\elements\\base_element.py:17: AssertionError"}, "parameters": [{"name": "browser_page", "value": "'chromium'"}, {"name": "cat_btn", "value": "'men_category_button'"}, {"name": "subcat_btn", "value": "'men_tshirts_button'"}, {"name": "expected_title", "value": "'Men - Tshirts Products'"}, {"name": "expected_product", "value": "'Summer T-shirt'"}, {"name": "expected_url", "value": "'category_products/3'"}, {"name": "url", "value": "'https://www.automationexercise.com/'"}], "start": 1754909642579, "stop": 1754909649310, "uuid": "4e2d1d12-f8f8-42eb-bd37-4ee43222d1c0", "historyId": "d047cf855bddc8955da8d33b6d501dd4", "testCaseId": "acad89139754a3219f004b8b1de94568", "fullName": "tests.test_chosen_category.test_chosen_category#test_chosen_category", "labels": [{"name": "tag", "value": "no_path"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "chosen_category"}, {"name": "parentSuite", "value": "tests.test_chosen_category"}, {"name": "suite", "value": "test_chosen_category"}, {"name": "host", "value": "DESKTOP-413R136"}, {"name": "thread", "value": "16828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_chosen_category.test_chosen_category"}], "titlePath": ["tests", "test_chosen_category", "test_chosen_category.py"]}